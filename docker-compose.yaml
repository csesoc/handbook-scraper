version: '3.8'

services:
  mongodb:
    image: mongo:6.0.2
    container_name: mongodb
    volumes:
      # Named volume to persist database
      - circles_data:/data/db
    env_file:
      - ./env/mongodb.env
    networks:
      - circles-net
    ports:
      - '27017:27017'
  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    container_name: backend
    ports:
      - '8000:8000'
    env_file:
      - ./env/backend.env
    depends_on:
      - mongodb
    networks:
      - circles-net
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.dockerfile
    container_name: frontend
    ports:
      - '3000:3000'
    env_file:
      - ./env/frontend.env
    volumes:
      # Bind mount volume for live frontend updates while developing
      - ./frontend/src:/client/src
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - circles-net
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: production.dockerfile
    container_name: frontend
    ports:
      - '3000:80'
    env_file:
      - ./env/frontend.env
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - circles-net
  init-mongo:
    # Utility container to populate / overwrite database
    # Run after build or when you need to overwrite data
    build:
      context: ./backend
      dockerfile: init-mongo.dockerfile
    container_name: init-mongo
    env_file:
      - ./env/backend.env
    depends_on:
      - mongodb
    networks:
      - circles-net
  ci-backend:
    # Utility container to populate / overwrite database
    # Run after build or when you need to overwrite data
    build:
      context: ./backend
      dockerfile: init-mongo.dockerfile
    container_name: init-mongo
    env_file:
      - ./env/backend.env
    depends_on:
      - backend
    networks:
      - circles-net

# Note only named volumes need to be listed here for persistance.
volumes:
  circles_data:

networks:
  circles-net:
